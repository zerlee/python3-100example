#!/usr/bin/python
#海滩上有一堆桃子，五只猴子来分。
#第一只猴子把这堆桃子平均分为五份，多了一个，
#这只猴子把多的一个扔入海中，拿走了一份。
#第二只猴子把剩下的桃子又平均分成五份，又多了一个，
#它同样把多的一个扔入海中，拿走了一份，
#第三、第四、第五只猴子都是这样做的，
#问海滩上原来最少有多少个桃子

#不考虑解方程什么的，问题实际上归结成
#    “整数n，迭代5次之每次都能得到整数，求n的最小值”问题。
#   一开始想简单了，以为最后的猴子只拿一个，代进去一算发现不是整数。
#  于是直接暴力输入，一个个试直到3121，得到整除。
# 当然也可以反着试，假设最后一个猴子拿到n个桃子，remain = lambda t:t/4*5+1，
#一个个试直到1020，得到整除，也能得出结论，最开始的猴子拿了3121个桃子。

for total in range(10000): #沙滩上有t个桃子
    t =total
    remain = lambda t:(t-1)/5*4          #每次分完桃子后剩余的桃子
    for i in range(5):      
        t = remain(t)          #剩余的桃子作为下次分桃的总数
        if t%1!=0:                          #桃子必须为整数
            break                       
    else:
        print(total,t)
        break
